<?xml version="1.0" encoding="UTF-8"?>
<!-- Mit XMLSpy v2013 sp1 (x64) (http://www.altova.com) von Peter von Grumbkow (HaCon Ingenieurgesellschaft mbH) bearbeitet -->
<!-- edited with XMLSpy v2010 rel. 3 sp1 (x64) (http://www.altova.com) by Peter von Grumbkow (HaCon Ingenieurgesellschaft mbH) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!--*******************************************************************-->
	<!--Interface for X-Sharing Information (IXSI)-->
	<!--*******************************************************************-->
	<!--Spezifikation, Version 4 vom 2014-07-03-->
	<!--Urheber: Peter von Grumbkow, HaCon Ing.-Ges. mbH und Dirk Hillbrecht, cantamen GmbH-->
	<!--Diese Schnittstellenspezifikation steht unter folgender Lizenz: CC BY-ND 3.0 DE (Creative Commons Namensnennung-Keine Bearbeitung 3.0 Deutschland), http://creativecommons.org/licenses/by-nd/3.0/de/-->
	<!--*******************************************************************-->
	<!--Specification, Version 4 of 2014-07-03-->
	<!--Authors: Peter von Grumbkow, HaCon Ing.-Ges. mbH and Dirk Hillbrecht, cantamen GmbH-->
	<!--This interface specification is licensed according to: CC BY-ND 3.0 DE (Creative Commons Namensnennung-Keine Bearbeitung 3.0 Deutschland), http://creativecommons.org/licenses/by-nd/3.0/de/-->
	<!--*******************************************************************-->
	<xs:annotation>
		<xs:documentation>**** ID type definitions ****</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="AreaIDType">
		<xs:annotation>
			<xs:documentation>Typ für Areal-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="PlaceIDType">
		<xs:annotation>
			<xs:documentation>Typ für Ort-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="PlaceGroupIDType">
		<xs:annotation>
			<xs:documentation>Typ für Ortsgruppen-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="BookeeIDType">
		<xs:annotation>
			<xs:documentation>Typ für bookee IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="ProviderIDType">
		<xs:annotation>
			<xs:documentation>Typ für Anbieter-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="SessionIDType">
		<xs:annotation>
			<xs:documentation>Typ für Session-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="BookingIDType">
		<xs:annotation>
			<xs:documentation>Typ für Buchungs-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="UserIDType">
		<xs:annotation>
			<xs:documentation>Typ für User-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="SystemIDType">
		<xs:annotation>
			<xs:documentation>Typ für System-IDs.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>**** Generelle Typ-Definitionen ****</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="EuroPriceType">
		<xs:annotation>
			<xs:documentation>Typ für Lagerpreise in Euro cents.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:nonNegativeInteger"/>
	</xs:simpleType>
	<xs:simpleType name="PercentType">
		<xs:annotation>
			<xs:documentation>Typ für Prozent zwischen 0 und 100.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:maxInclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="BookingTargetIDType">
		<xs:annotation>
			<xs:documentation>Typ für Buchungsziel-IDs.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookeeID" type="BookeeIDType"/>
			<xs:element name="ProviderID" type="ProviderIDType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProviderPlaceIDType">
		<xs:annotation>
			<xs:documentation>Typ für Anbieter/Ort-Kombinationen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProviderID" type="ProviderIDType"/>
			<xs:element name="PlaceID" type="PlaceIDType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CoordType">
		<xs:annotation>
			<xs:documentation>Typ für geodezimale Koordinaten. Das Referenz-Ellipsoid ist immer WGS84 (GPS).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Longitude">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="-180.0"/>
						<xs:maxInclusive value="180.0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Latitude">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="-90.0"/>
						<xs:maxInclusive value="90.0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeoRectangleType">
		<xs:annotation>
			<xs:documentation>Typ für ein geographisches Rechteck.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UpperLeft" type="CoordType">
				<xs:annotation>
					<xs:documentation>Obere linke Ecke des geographischen Rechtecks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LowerRight" type="CoordType">
				<xs:annotation>
					<xs:documentation>Untere rechte Ecke des geographischen Rechtecks.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeoCircleType">
		<xs:annotation>
			<xs:documentation>Typ für einen geographischen Kreis.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Center" type="CoordType">
				<xs:annotation>
					<xs:documentation>Koordinaten des Kreiszentrums.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Radius" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Radius des Kreises in Metern.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeoAreaType">
		<xs:annotation>
			<xs:documentation>Typ für geographische Areale.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PolyPoint" type="CoordType" minOccurs="3" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Geopositionen der nahegelegensten Polygongrenze des Areals.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IncExcGeoAreaType">
		<xs:annotation>
			<xs:documentation>Typ für geographische Areale mit Ausschlusswahrscheinlichkeit.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="GeoAreaType">
				<xs:sequence>
					<xs:element name="Exclude" type="xs:boolean" default="false" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Nur im Falle von "wahr" definiert diese Arealdefinition einen Ausschluss.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:group name="DurationGroup">
		<xs:annotation>
			<xs:documentation>Gruppe für die wahrscheinliche Dauer und ihrer Varianz um ein Buchungsziel zu erhalten.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Duration" type="xs:duration">
				<xs:annotation>
					<xs:documentation>Wahrscheinliche Dauer um ein Buchungsziel zu erhalten.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Variance" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Varianz der wahrscheinlichen Dauer um ein Buchungsziel zu erhalten. Die wahrscheinliche Dauer kann um diesen Wert nach oben oder unten variieren.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="DensityAreaType">
		<xs:annotation>
			<xs:documentation>Typ für geograohischen Areale mit wahrscheinlicher Zeit um ein Vehikel zu erhalten.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Area" type="GeoAreaType">
				<xs:annotation>
					<xs:documentation>Definition des geographischen Areals.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="DurationGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TimePeriodType">
		<xs:annotation>
			<xs:documentation>Typ für eine Zeitperiode.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Begin" type="xs:dateTime"/>
			<xs:element name="End" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TimePeriodProposalType">
		<xs:annotation>
			<xs:documentation>Typ für ein Zeitperioden-Vorschlag.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TimePeriodType">
				<xs:sequence>
					<xs:element name="MaxWait" type="xs:duration" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Maximale Wartezeit bis die Buchung tatsächlich beginnen kann unter Berücksichtigung des Buchungsterminrasters. </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TextType">
		<xs:annotation>
			<xs:documentation>Typ für einen Text.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Text" type="xs:string"/>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sprach-Identifier entsprechend BCP 47, welcher auf ISO 639 basiert ist.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserInfoType">
		<xs:annotation>
			<xs:documentation>Typ für eine User-Identifizierung.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProviderID" type="ProviderIDType">
				<xs:annotation>
					<xs:documentation>ID des Bereitstellers des Users. Ohne diese ist die User-ID nicht einzigartig.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserID" type="UserIDType">
				<xs:annotation>
					<xs:documentation>User-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Password" type="xs:normalizedString">
					<xs:annotation>
						<xs:documentation>Passwort des Users.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Token" type="xs:token">
					<xs:annotation>
						<xs:documentation>Authentifizierungs-Token für den User, welcher das Passwort aus Sicherheitsgründen ersetzt.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AuthType">
		<xs:annotation>
			<xs:documentation>Typ für eine Authentifizierung innerhalb einer Anfrage.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="SessionID" type="SessionIDType">
					<xs:annotation>
						<xs:documentation>Valide Session-ID. Falls eine Session wiederverwendet wird, diese ausfüllen.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="UserInfo" type="UserInfoType">
					<xs:annotation>
						<xs:documentation>Falls keine Session verfügbar ist, muss der User authentisieren.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Anonymous" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Falls weder eine existierende Session, noch eine Nutzerinformation verfügbar ist, kann eine anonyme Session geöffnet werden.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="SessionTimeout" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Falls gesetzt, wünscht der Client eine Session mit gegebenem Inaktivitätstimeout.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransactionType">
		<xs:annotation>
			<xs:documentation>Typ für eine Transaktions-ID innerhalb von Anfragen und Antworten.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TimeStamp" type="xs:dateTime"/>
			<xs:element name="MessageID" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Eindeutige ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ErrorCodeType">
		<xs:annotation>
			<xs:documentation>Aufzählung von Fehlercodes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:complexType name="ErrorType">
		<xs:annotation>
			<xs:documentation>Typ für Fehler.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="ErrorCodeType">
				<xs:annotation>
					<xs:documentation>Fehlercode, entnommen aus der Liste für erlaubte Fehlercodes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NonFatal" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Falls gesetzt, war die korrespondierende Operation generell erfolgreich und Operationen können fortlaufen.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SystemMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Text für Systemlogging, welcher den Fehler detaillierter erläutert. Sollte in englischer Sprache sein.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Text für Userinformation in angeforderter Sprache.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Typ-Definitionen ****</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="ClassType">
		<xs:annotation>
			<xs:documentation>Aufzählung von Autoklassen.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="EngineType">
		<xs:annotation>
			<xs:documentation>Aufzählung von Motoren.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="AttributeClassType">
		<xs:annotation>
			<xs:documentation>Aufzählung von Attributklassen.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:simpleType name="AttributeIDType">
		<xs:annotation>
			<xs:documentation>Aufzählung von Attributcodes.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN"/>
	</xs:simpleType>
	<xs:complexType name="AttributeType">
		<xs:annotation>
			<xs:documentation>Typ für strukturierte Attributklassifikation mit assoziiertem Text.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Text" type="TextType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Text des Attributs, welcher dem User angezeigt wird.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WithText" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Definiert, ob dieses Attribut einen Text hat, welcher für den User bestimmt ist, oder nicht.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="AttributeIDType">
				<xs:annotation>
					<xs:documentation> Interner Code des Attributs zur Referenzierung</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Class" type="AttributeClassType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Klasse von Attributen, entnommen aus der Liste für erlaubte Werte.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separate" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Falls auf "wahr" gesetzt, beschreibt dieses Attribut Zubehörequipment, welches separat gebucht werden muss.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mandatory" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Definiert, ob das Attribut dem Nutzer in irgendeiner Form angezeigt wird.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Importance" type="PercentType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Wichtigkeit des Attributs in Prozent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>URL für zusätzliche Informationen zu diesem generellen Attribut. Falls verfügbar, muss der gesamte Attributtext als markierter Link verwendet werden.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StopLinkType">
		<xs:annotation>
			<xs:documentation>Typ für eine Verbindung von einem Car-Sharing Standort zu einem Stop.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StopID" type="xs:NMTOKEN"/>
			<xs:group ref="DurationGroup"/>
			<xs:element name="Distance" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Distanz des Fußweges für diese Verbindung in Metern. Für den Fall von Arealen ist dies die wahrscheinliche Distanz des Fußweges um ein Vehikel zu erreichen.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProviderType">
		<xs:annotation>
			<xs:documentation>Typ für Anbieterinformationen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="ProviderIDType">
				<xs:annotation>
					<xs:documentation>Anbieter-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:normalizedString">
				<xs:annotation>
					<xs:documentation>Druckbarer voller Name des Anbieters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShortName" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Druckbarer verkürzter Name des Anbieters</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>URL zur Homepage des Anbieters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LogoURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>URL zu einem Logo des Anbieters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InterAppBaseURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Basis-URL zum Aufruf einer Anbieter-App (z.B. zum Buchen).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WebAppBaseURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Basis-URL zum Aufruf einer Anbieter-Web-App (z.B. zum Buchen).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="PlaceOrAreaGroup">
		<xs:annotation>
			<xs:documentation>Gruppe für Informationen, welche für Plätze und free floating-Areale verwendet werden.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="TextType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Druckbare Namen des Platzes oder Areals.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProviderID" type="ProviderIDType">
				<xs:annotation>
					<xs:documentation>Provider-ID, zu welcher der Platz oder das Areal gehört.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="TextType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="StopLink" type="StopLinkType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Fußwegverbindungen zu Stops.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeID" type="AttributeIDType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Zusätzliche Informationen zu diesem Platz oder Areal.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="PlaceType">
		<xs:annotation>
			<xs:documentation>Typ für Platzinformationen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="PlaceIDType">
				<xs:annotation>
					<xs:documentation>Platz-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Coord" type="CoordType">
				<xs:annotation>
					<xs:documentation>Geoposition des Platzes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Capacity" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Kapazität des Platzes zum Zurückweisen von Buchungszielen.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="PlaceOrAreaGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProbabilityPlaceIDType">
		<xs:annotation>
			<xs:documentation>Typ für eine Platz-ID mit einer Wahrscheinlichkeit, ein Buchungsziel zu erhalten.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="PlaceIDType">
				<xs:annotation>
					<xs:documentation>Platz-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Probability" type="PercentType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Durchschnittliche Wahrscheilichkeit, ein Buchungsziel auf diesem Platz zu erhalten. Verwendbar nur für Plätze innerhalb von Platz-Gruppen.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlaceGroupType">
		<xs:annotation>
			<xs:documentation>Typ für Platz-Gruppen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="PlaceGroupIDType">
				<xs:annotation>
					<xs:documentation>Platz-Gruppen-ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PlaceID" type="ProbabilityPlaceIDType" maxOccurs="unbounded"/>
			<xs:element name="Probability" type="PercentType">
				<xs:annotation>
					<xs:documentation>Durchschnittliche Wahrscheinlichkeit, ein Buchungsziel auf einem spezifischen Platz, innerhalb dieser Platz-Gruppe zu erhalten. Gilt nur für solche Plätze, für die ein spezieller Wert hinterlegt ist.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FloatingAreaType">
		<xs:annotation>
			<xs:documentation>Typ für Free-Floating-Areale.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="AreaIDType">
				<xs:annotation>
					<xs:documentation>Areal-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Area" type="IncExcGeoAreaType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Geographische Areale, abgedeckt durch Free-Floaters. Ein Punkt gehört zum Free-Floating-Areal, falls dieser zumindest einer der gegebenen Inklusionsareale und nicht einer der Exlusionsareale ist.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="PlaceOrAreaGroup"/>
			<xs:group ref="DurationGroup"/>
			<xs:element name="SubArea" type="DensityAreaType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Sub-Areale des Free-Floating-Areals. Für jedes Sub-Areal ist eine geschätzte Zeit (und dessen Varianz) gegeben, um ein Free-Floating-Buchungsziel zu erhalten. Für Stops, die mehr als ein Sub-Areal abdecken, wird die Mindestdauer verwendet.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingTargetType">
		<xs:annotation>
			<xs:documentation>Typ für Buchungszielinformationen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="BookeeIDType">
				<xs:annotation>
					<xs:documentation>Bookee-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="TextType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Druckbarer Name des Bookee.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="PlaceID" type="PlaceIDType">
					<xs:annotation>
						<xs:documentation>Platz-ID, auf dem der Bookee platziert ist. Muss mit stationsbasierten Buchungszielen befüllt werden.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceGroupID" type="PlaceGroupIDType">
					<xs:annotation>
						<xs:documentation>Platz-Gruppen-ID dieses Bookees, falls er nicht zu einem fixierten Platz gehört.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="AreaID" type="AreaIDType">
					<xs:annotation>
						<xs:documentation>Areal-ID dieses Bookees. Muss mit Free-Floating-Buchungszielen befüllt werden.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="Class" type="ClassType">
				<xs:annotation>
					<xs:documentation>Klasse des Bookees.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BookingHorizon" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximale Dauer in der Zukunft, wenn dieses Ziel gebucht werden kann. Ist relativ zur aktuellen Zeit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BookingGrid" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Netz für Start- und Endzeit der Buchung in Minuten. Sollte ein Divisor von 60 sein. Beispiele: 1, 5, 10, 15, 30, 60.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Engine" type="EngineType" minOccurs="0"/>
			<xs:element name="CO2Factor" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CO2-Emmissionen in Gramm pro Kilometer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxDistance" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Maximale Distanz ion Metern, die ein Bookee ohne längere Stops zurücklegen kann. Falls nicht gegeben, ist kein Limit angenommen.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AttributeID" type="AttributeIDType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Zusätzliche Informationen zu diesem Bookee, z.B. Klimaanlage, Navigationssystem, etc..</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingTargetPropertiesType">
		<xs:annotation>
			<xs:documentation>Typ für benötigte Eigenschaften eines Buchungsziels für synchrone Verfügbarkeit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="BookingTargetIDType">
				<xs:annotation>
					<xs:documentation>Buchungsziel-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Distance" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Distanz zu Fahren in Metern. Das Car-Sharing-System sollte nur die verfügbaren Buchungsziele zurückgeben, welche die Distanz zurücklegen können (gemäß Ladestatus).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeverityFactor" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Severity-Faktor der vorgeschlagenden Route in Prozent. 100 repräsentieren eine nahezu vollkommen flache Route.Je höher der Wert, desto mehr Energy wird für das Fahren der Route verbraucht. Beispielsweise ein Wert von 200 indiziert, dass doppelt so viel Energie verbracht wird, wie es bei einer vollkommen flachen Route der Fall wäre.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingTargetAvailabilityType">
		<xs:annotation>
			<xs:documentation>Typ für Verfügbarkeit von Buchungszielen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="BookingTargetIDType"/>
			<xs:element name="PlaceID" type="PlaceIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Für aktuell verfügbare Buchungsziele, welche nicht an einen spezifischen Platz gebunden sind, sollte der aktuelle Platz zurückgegeben werden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeoPosition" type="CoordType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Für aktuell verfügbare Buchungsziele, welche nicht an einen spezifischen Platz gebunden sind, sollte die aktuelle Position zurückgegeben werden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inavailability" type="TimePeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Perioden der Nicht-Verfügbarkeit von Buchungszielen.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentStateOfCharge" type="PercentType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Aktueller Ladestatus der Buchungsziels in Prozent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentDrivingRange" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Aktuelle Reichweite des Buchungsziels in Metern, gegeben einer nahezu flachen Route. Falls nicht gegeben, wird für das Vehikel einen unbegrenzte Reichweite angenommen.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingTargetChangeAvailabilityType">
		<xs:annotation>
			<xs:documentation>Typ für Änderungen der Verfügbarkeit von Buchungszielen.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="BookingTargetIDType">
				<xs:annotation>
					<xs:documentation>Buchungsziel-ID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PlaceID" type="PlaceIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Für aktuell verfügbare Buchungsziele, welche nicht an einen spezifischen Platz gebunden sind, sollte der aktuelle Platz zurückgegeben werden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeoPosition" type="CoordType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Für neu verfügbare Vehikel, welche nicht an einen spezifischen Platz gebunden sind, sollte die Position zurückgegeben werden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Inavailability" type="TimePeriodType">
					<xs:annotation>
						<xs:documentation>Neue Nicht-Verfügbarkeitsperiode.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Availability" type="TimePeriodType">
					<xs:annotation>
						<xs:documentation>Neue Verfügbarkeitsperiode.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlaceAvailabilityType">
		<xs:annotation>
			<xs:documentation>Typ für die verfügbare Kapazität eines Platzes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="ProviderPlaceIDType"/>
			<xs:element name="Availability" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Aktuell verfügbare Kapazität um Buchungsziele zurückzugeben.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingChangeType">
		<xs:annotation>
			<xs:documentation>Typ für Änderungen einer Buchung.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingID" type="BookingIDType"/>
			<xs:choice>
				<xs:element name="Cancelled" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Buchung wurde vom User abgebrochen. Eventuell über verschiedene Kanäle (z.B. native App, Telefon, etc.). Anschließend ist die Buchungs-ID nicht mehr valide.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="NewPeriod" type="TimePeriodType">
					<xs:annotation>
						<xs:documentation>Der Buchung wurde eine neue Periode vom User zugewiesen. Eventuell über verschiedene Kanäle (z.B. native App, Telefon, etc.).</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Notification" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Die Buchung ist noch valide, allerdings gibt es Informationen für den User betreffend der Buchung.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Impossible" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Es war nicht möglich die Buchung auszuführen von Seiten des Car-Sharing-Systems (z.B. durch Fahrzeugversagen). Trotzdem ist die Buchung weiter valide, solange die Ausführung später ermöglicht wird.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Repossiblized" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Es war möglich, die Buchung erneut auszuführen (z.B. durch das Ersetzen eines Fahrzeugs).</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="Reason" type="TextType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TariffDetailType">
		<xs:annotation>
			<xs:documentation>Typ für eine Tarifkomponente einschließlich des Preises.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Druckbarer Name des Tarifdetails.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="EuroPriceType">
				<xs:annotation>
					<xs:documentation>Preis in Euro-Cent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Druckbare Beschreibung des Tarifdetails.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TariffType">
		<xs:annotation>
			<xs:documentation>Typ für einen Tarif einschließlich des Preises.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Druckbarer Name des Tarifs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="EuroPriceType">
				<xs:annotation>
					<xs:documentation>Preis in Euro-Cent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Druckbare Beschreibung des Tarifs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Detail" type="TariffDetailType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Details des Endpreises. Falls bereitgestellt, sollten diese einen Satz Preiskomponenten beinhalten, welche den Gesamtpreis bilden.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OriginDestType">
		<xs:annotation>
			<xs:documentation>Typ für den Ausgangspunkt oder den Reisezielort.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="PlaceID" type="PlaceIDType">
				<xs:annotation>
					<xs:documentation>Standort-ID. Falls gegeben, bezieht sich die Lokalität auf den Standort mit dieser ID.Verwendet für standort-basierte Buchungsziele.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeoPosition" type="CoordType">
				<xs:annotation>
					<xs:documentation>Falls gegeben, bezieht sich die Lokalität auf diese Geoposition. Verwendet für Free-Floating-Buchungsziele.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:group name="OriginDestGroup">
		<xs:annotation>
			<xs:documentation> Gruppe für Ausgangspunkt und Reisezielort.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Origin" type="OriginDestType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Lokalität, wo Buchungsziel aufgenommen wird.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Dest" type="OriginDestType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Lokalität, wo Buchungsziel zurückgegeben wird.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="AbstractBaseResponseType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstrakter Typ als eine Basis für Antworten.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Error" type="ErrorType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Basisservice (A) : Offene Session ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="OpenSessionRequestType">
		<xs:annotation>
			<xs:documentation>Anfrage für das öffnen einer Session für den User. Kann für Funktionen 2, 4, und 6 verwendet werden.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="OpenSessionResponseType">
		<xs:annotation>
			<xs:documentation>Antwort für das Öffnen einer Session für einen User.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CloseSessionRequestType">
		<xs:annotation>
			<xs:documentation>Anfrage für das Schließen einer existierenden Session.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="CloseSessionResponseType">
		<xs:annotation>
			<xs:documentation>Antort für das Schließen einer existierenden Session.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Basisservice (B) : Abonnements ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="HeartBeatRequestType">
		<xs:annotation>
			<xs:documentation>Anfrage für das Prüfen einer Verbindung.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="HeartBeatResponseType">
		<xs:annotation>
			<xs:documentation>Antwort für das Prüfen einer Verbindung.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Basisservice (C) : Token Generierung ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="TokenGenerationRequestType">
		<xs:annotation>
			<xs:documentation>Request for generating a token for a user.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="TokenGenerationResponseType">
		<xs:annotation>
			<xs:documentation>Response for generating a token for a user.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="Token" type="xs:token" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Token for the user. Can be used in future instead of the password for authentication.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (1) : Static data ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="BookingTargetsInfoRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting all infos for all booking targets.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProviderFilter" type="ProviderIDType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If set, the filter contains those providers, data is requested for. If not set, data for all providers is requested.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingTargetsInfoResponseType">
		<xs:annotation>
			<xs:documentation>Response for getting all infos for all booking targets.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Timestamp of this data delivery. The delivering system should be able to identify changes compared to this delivery by this timestamp.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Bookee" type="BookingTargetType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Place" type="PlaceType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="PlaceGroup" type="PlaceGroupType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="FreeFloatingArea" type="FloatingAreaType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Provider" type="ProviderType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="Attributes" type="AttributeType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChangedProvidersRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting those providers with changed static data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Timestamp" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Timestamp of the static data delivery, the changes are requested for.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChangedProvidersResponseType">
		<xs:annotation>
			<xs:documentation>Repsonse for getting those providers with changed static data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="Provider" type="ProviderIDType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>List of providers, which have changes in their static data.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (2) : Availability query ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="AvailabilityRequestType">
		<xs:annotation>
			<xs:documentation>Synchronous request for availabilities of booking targets.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="BookingTarget" type="BookingTargetPropertiesType" maxOccurs="unbounded"/>
				<xs:element name="Circle" type="GeoCircleType"/>
				<xs:element name="GeoRectangle" type="GeoRectangleType"/>
			</xs:choice>
			<xs:element name="TimePeriod" type="TimePeriodType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Interesting time period, for which availabilities of the given booking targets shall be returned. If no given, currently available booking targets should be returned.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AvailabilityResponseType">
		<xs:annotation>
			<xs:documentation>Synchronous response for availabilites of booking targets.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="BookingTarget" type="BookingTargetAvailabilityType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>List of booking targets and their availabilities. Not listed booking targets are considered to be either unknown to the car sharing system or not available at all in the requested time period.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (2a) : Available places query ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="PlaceAvailabilityRequestType">
		<xs:annotation>
			<xs:documentation>Synchronous request for the available capacity of places.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="PlaceID" type="ProviderPlaceIDType" maxOccurs="unbounded"/>
				<xs:element name="Circle" type="GeoCircleType"/>
				<xs:element name="GeoRectangle" type="GeoRectangleType"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlaceAvailabilityResponseType">
		<xs:annotation>
			<xs:documentation>Synchronous response for the available capacity of places..</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="Place" type="PlaceAvailabilityType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>List of places and their available capacity. Not listed places are considered to be either unknown to the car sharing system or not available at all.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (3) : Availability subscription ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="AvailabilitySubscriptionRequestType">
		<xs:annotation>
			<xs:documentation>Request for subscribing to availabilities of given booking targets.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingTargetID" type="BookingTargetIDType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Booking tragets to subscribe/unsubscribe.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Unsubscription" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If set, unsubcribe from the given booking targets. Otherwise subscribe to them.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventHorizon" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If set, the event horizon defines the time in future, for wich the subscription is valid. This value is used for all subscribed booking targets. This duration is relative to the current time.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AvailabilitySubscriptionResponseType">
		<xs:annotation>
			<xs:documentation>Response for subscribing to availabilities of given booking targets.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AvailabilitySubscriptionStatusRequest">
		<xs:annotation>
			<xs:documentation>Request for getting all subsribed booking targets.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="AvailabilitySubscriptionStatusResponse">
		<xs:annotation>
			<xs:documentation>Response for getting all subscribed booking targets.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="BookingTargetID" type="BookingTargetIDType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Subscribed booking targets.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CompleteAvailabilityRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting the complete current status of subscribed availabilities.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxTargets" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the maximum number of targets to be returned in one message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompleteAvailabilityResponseType">
		<xs:annotation>
			<xs:documentation>Response for getting the complete current status of subscribed abailabilities. Several such responses may belong to one single request.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="MessageBlockID" type="xs:NMTOKEN">
						<xs:annotation>
							<xs:documentation>ID of the block, this message belongs to. All messages of one block have the same ID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Last" type="xs:boolean" default="false" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If set, this message is the last one in the corresponding block. Otherwise more messages of the same block will follow.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BookingTarget" type="BookingTargetAvailabilityType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AvailabilityPushMessageType">
		<xs:annotation>
			<xs:documentation>Push message containing changes in availability of subscribed booking targets.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AvailabilityChange" type="BookingTargetChangeAvailabilityType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (3a) : Available places subscription ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="PlaceAvailabilitySubscriptionRequestType">
		<xs:annotation>
			<xs:documentation>Request for subscribing to available capacity of places.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PlaceID" type="ProviderPlaceIDType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Places to subscribe/unsubscribe.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Unsubscription" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If set, unsubcribe from the given booking targets. Otherwise subscribe to them.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlaceAvailabilitySubscriptionResponseType">
		<xs:annotation>
			<xs:documentation>Response for subscribing to available capacity of places.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PlaceAvailabilitySubscriptionStatusRequest">
		<xs:annotation>
			<xs:documentation>Request for getting all subsribed places.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="PlaceAvailabilitySubscriptionStatusResponse">
		<xs:annotation>
			<xs:documentation>Response for getting all subscribed places.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="PlaceID" type="ProviderPlaceIDType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Subscribed places.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CompletePlaceAvailabilityRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting the complete current status of subscribed places.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxPlaces" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the maximum number of places to be returned in one message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompletePlaceAvailabilityResponseType">
		<xs:annotation>
			<xs:documentation>Response for getting the complete current status of subscribed places. Several such responses may belong to one single request.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="MessageBlockID" type="xs:NMTOKEN">
						<xs:annotation>
							<xs:documentation>ID of the block, this message belongs to. All messages of one block have the same ID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Last" type="xs:boolean" default="false" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If set, this message is the last one in the corresponding block. Otherwise more messages of the same block will follow.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PlaceAvailability" type="PlaceAvailabilityType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PlaceAvailabilityPushMessageType">
		<xs:annotation>
			<xs:documentation>Push message containing changes in availability of subscribed places.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PlaceAvailability" type="PlaceAvailabilityType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (4) : Booking ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="BookingRequestType">
		<xs:annotation>
			<xs:documentation>Request for booking a booking target.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingTargetID" type="BookingTargetIDType"/>
			<xs:element name="TimePeriodProposal" type="TimePeriodProposalType">
				<xs:annotation>
					<xs:documentation>Proposed time period for the usage of the booking target.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="OriginDestGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingResponseType">
		<xs:annotation>
			<xs:documentation>Response for booking a booking target.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="BookingID" type="BookingIDType" minOccurs="0"/>
					<xs:element name="TimePeriod" type="TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Actual time period of the booking, eventually adapted to the booking time grid.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChangeBookingRequestType">
		<xs:annotation>
			<xs:documentation>Request for changing a booking.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingID" type="BookingIDType">
				<xs:annotation>
					<xs:documentation>Booking to change.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="NewTimePeriodProposal" type="TimePeriodProposalType">
					<xs:annotation>
						<xs:documentation>New time period proposal for changing the booking.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Cancel" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The booking shall be cancelled.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChangeBookingResponseType">
		<xs:annotation>
			<xs:documentation>Response for changing a booking.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="TimePeriod" type="TimePeriodType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Actiual time period of booking, eventually adapted to the booking time grid.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (5) : Booking alerts subscription ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="BookingAlertSubscriptionRequestType">
		<xs:annotation>
			<xs:documentation>Request for subscribing to alerts for given bookings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingID" type="BookingIDType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Bookings to subscribe/unsubscribe.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Unsubscription" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If set, unsubcribe from the given bookings. Otherwise subscribe to them.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingAlertSubscriptionResponseType">
		<xs:annotation>
			<xs:documentation>Response for subscribing to alerts for given bookings.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BookingAlertSubscriptionStatusRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting all subscribed bookings.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="BookingAlertSubscriptionStatusResponseType">
		<xs:annotation>
			<xs:documentation>Response for getting all subscribed bookings.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="BookingID" type="BookingIDType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Subscribed bookings.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CompleteBookingAlertRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting the complete current status of subscribed booking alerts.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MaxResults" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the maximum number of results to be returned in one message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompleteBookingAlertResponseType">
		<xs:annotation>
			<xs:documentation>Message for getting the complete current status of subscribed bookings. Several such responses may belong to one single request.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="MessageBlockID" type="xs:NMTOKEN">
						<xs:annotation>
							<xs:documentation>ID of the block, this message belongs to. All messages of one block have the same ID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Last" type="xs:boolean" default="false" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If set, this message is the last one in the corresponding block. Otherwise more messages of the same block will follow.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BookingChange" type="BookingChangeType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BookingAlertPushMessageType">
		<xs:annotation>
			<xs:documentation>Push message containing alerts for subscribed bookings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingChange" type="BookingChangeType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Service (6) : Price Information ****</xs:documentation>
	</xs:annotation>
	<xs:complexType name="PriceInformationRequestType">
		<xs:annotation>
			<xs:documentation>Request for getting a price.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BookingTargetID" type="BookingTargetIDType"/>
			<xs:element name="TimePeriodProposal" type="TimePeriodProposalType">
				<xs:annotation>
					<xs:documentation>Proposed time period for the usage of the booking target.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Distance" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Distance to drive in meters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="OriginDestGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PriceInformationResponseType">
		<xs:annotation>
			<xs:documentation>Response for getting a price.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AbstractBaseResponseType">
				<xs:sequence>
					<xs:element name="Tariff" type="TariffType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>**** Message container ****</xs:documentation>
	</xs:annotation>
	<xs:group name="UserTriggeredRequestGroup">
		<xs:annotation>
			<xs:documentation>Requests which are directly triggered through a user interaction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Requested language for the results. All texts returned in the respective responses should be in this language.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Auth" type="AuthType">
				<xs:annotation>
					<xs:documentation>Authentication information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="OpenSession" type="OpenSessionRequestType">
					<xs:annotation>
						<xs:documentation>Open a session for a user.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="CloseSession" type="CloseSessionRequestType">
					<xs:annotation>
						<xs:documentation>Explicitely close a session.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TokenGeneration" type="TokenGenerationRequestType">
					<xs:annotation>
						<xs:documentation>Generate a token for a user which replaces his password.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Availability" type="AvailabilityRequestType">
					<xs:annotation>
						<xs:documentation>Get the availability for the given booking targets.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailability" type="PlaceAvailabilityRequestType">
					<xs:annotation>
						<xs:documentation>Get the availabile capacity for the given places.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PriceInformation" type="PriceInformationRequestType">
					<xs:annotation>
						<xs:documentation>Get a price information.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Booking" type="BookingRequestType">
					<xs:annotation>
						<xs:documentation>Book a booking target.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ChangeBooking" type="ChangeBookingRequestType">
					<xs:annotation>
						<xs:documentation>Change a booking.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="UserTriggeredResponseGroup">
		<xs:annotation>
			<xs:documentation>Responses, which are directly triggered through a user interaction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SessionID" type="SessionIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If returned, a session for the user was opened. This session ID can be reused for authentication in the next request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SessionTimeout" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Inactivity timeout of the session. If a period of inactivity on this session exceeds this value, the session timeouts.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="OpenSession" type="OpenSessionResponseType">
					<xs:annotation>
						<xs:documentation>Open a session for the user.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="CloseSession" type="CloseSessionResponseType">
					<xs:annotation>
						<xs:documentation>Explicitely close a session.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TokenGeneration" type="TokenGenerationResponseType">
					<xs:annotation>
						<xs:documentation>Generate a token for a user which replaces his password.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Availability" type="AvailabilityResponseType">
					<xs:annotation>
						<xs:documentation>Get the availability for the given booking targets.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailability" type="PlaceAvailabilityResponseType">
					<xs:annotation>
						<xs:documentation>Get the availabile capacity for the given places.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PriceInformation" type="PriceInformationResponseType">
					<xs:annotation>
						<xs:documentation>Get a price information.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Booking" type="BookingResponseType">
					<xs:annotation>
						<xs:documentation>Book a booking target.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ChangeBooking" type="ChangeBookingResponseType">
					<xs:annotation>
						<xs:documentation>Change a booking.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="StaticDataRequestGroup">
		<xs:annotation>
			<xs:documentation>Requests for static data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="BookingTargetsInfo" type="BookingTargetsInfoRequestType">
					<xs:annotation>
						<xs:documentation>Get static data for all booking targets.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ChangedProviders" type="ChangedProvidersRequestType">
					<xs:annotation>
						<xs:documentation>Get providers with changes in their static data since the given timestamp.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="StaticDataResponseGroup">
		<xs:annotation>
			<xs:documentation>Responses containing static data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="BookingTargetsInfo" type="BookingTargetsInfoResponseType">
					<xs:annotation>
						<xs:documentation>Get the static data for all booking targets.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ChangedProviders" type="ChangedProvidersResponseType">
					<xs:annotation>
						<xs:documentation>Get providers with changes in their static data since the given timestamp.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="SubscriptionAdministrationRequestGroup">
		<xs:annotation>
			<xs:documentation>Requests for administrating subscription connections. Each request is answered by exactly one response.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="HeartBeat" type="HeartBeatRequestType">
					<xs:annotation>
						<xs:documentation>Check a connection.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="SubscriptionAdministrationResponseGroup">
		<xs:annotation>
			<xs:documentation>Responses for administrating subscription connections. Each response corresponds to exactly one request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="HeartBeat" type="HeartBeatResponseType">
					<xs:annotation>
						<xs:documentation>Check a connection.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="SubscriptionRequestGroup">
		<xs:annotation>
			<xs:documentation>Requests for subscriptions. Each request is answered by exactly one response.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="AvailabilitySubscription" type="AvailabilitySubscriptionRequestType">
					<xs:annotation>
						<xs:documentation>Subscribe for availabilities of booking targets.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailabilitySubscriptionStatus" type="AvailabilitySubscriptionStatusRequest">
					<xs:annotation>
						<xs:documentation>Check availability subscriptions.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailabilitySubscription" type="PlaceAvailabilitySubscriptionRequestType">
					<xs:annotation>
						<xs:documentation>Subscribe for available capacities of places.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailabilitySubscriptionStatus" type="PlaceAvailabilitySubscriptionStatusRequest">
					<xs:annotation>
						<xs:documentation>Check places subscriptions.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="BookingAlertSubscription" type="BookingAlertSubscriptionRequestType">
					<xs:annotation>
						<xs:documentation>Subscribe to booking changes.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="BookingAlertSubscriptionStatus" type="BookingAlertSubscriptionStatusRequestType">
					<xs:annotation>
						<xs:documentation>Check booking subscriptions.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="SubscriptionResponseGroup">
		<xs:annotation>
			<xs:documentation>Responses for subscriptions. Each response corresponds to exactly one request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="AvailabilitySubscription" type="AvailabilitySubscriptionResponseType">
					<xs:annotation>
						<xs:documentation>Subscribe for availabilities of booking targets.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="AvailabilitySubscriptionStatus" type="AvailabilitySubscriptionStatusResponse">
					<xs:annotation>
						<xs:documentation>Check availability subscriptions.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailabilitySubscription" type="PlaceAvailabilitySubscriptionResponseType">
					<xs:annotation>
						<xs:documentation>Subscribe for available capacities of places.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailabilitySubscriptionStatus" type="PlaceAvailabilitySubscriptionStatusResponse">
					<xs:annotation>
						<xs:documentation>Check places subscriptions.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="BookingAlertSubscription" type="BookingAlertSubscriptionResponseType">
					<xs:annotation>
						<xs:documentation>Subscribe to booking changes.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="BookingAlertSubscriptionStatus" type="BookingAlertSubscriptionStatusResponseType">
					<xs:annotation>
						<xs:documentation>Check booking subscriptions.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="RequestMessageGroup">
		<xs:annotation>
			<xs:documentation>Requests for getting subscribed information. Each requests is answered by at least one response.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="CompleteAvailability" type="CompleteAvailabilityRequestType">
					<xs:annotation>
						<xs:documentation>Get all subscribed availability information.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="CompletePlaceAvailability" type="CompletePlaceAvailabilityRequestType">
					<xs:annotation>
						<xs:documentation>Get all subscribed places information.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="CompleteBookingAlert" type="CompleteBookingAlertRequestType">
					<xs:annotation>
						<xs:documentation>Get all subscribed booking changes.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="ResponseMessageGroup">
		<xs:annotation>
			<xs:documentation>Responses for getting subscribed information. Each response corresponds to exactly one request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="CompleteAvailability" type="CompleteAvailabilityResponseType">
					<xs:annotation>
						<xs:documentation>Get all subscribed availability information.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="CompletePlaceAvailability" type="CompletePlaceAvailabilityResponseType">
					<xs:annotation>
						<xs:documentation>Get all subscribed places information.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="CompleteBookingAlert" type="CompleteBookingAlertResponseType">
					<xs:annotation>
						<xs:documentation>Get all subscribed booking changes.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="PushMessageGroup">
		<xs:annotation>
			<xs:documentation>Messages for getting subscribed information. Messages do not correspond to any request or response.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="AvailabilityPush" type="AvailabilityPushMessageType">
					<xs:annotation>
						<xs:documentation>Push message for availabilities.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="PlaceAvailabilityPush" type="PlaceAvailabilityPushMessageType">
					<xs:annotation>
						<xs:documentation>Push message for places.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="BookingAlertPush" type="BookingAlertPushMessageType">
					<xs:annotation>
						<xs:documentation>Push message for booking changes.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="QueryRequestType">
		<xs:annotation>
			<xs:documentation>Request messages in query scheme.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transaction" type="TransactionType">
				<xs:annotation>
					<xs:documentation>Transaction identifier, set by the requestor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:group ref="StaticDataRequestGroup"/>
				<xs:group ref="UserTriggeredRequestGroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QueryResponseType">
		<xs:annotation>
			<xs:documentation>Response messages in query scheme.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transaction" type="TransactionType">
				<xs:annotation>
					<xs:documentation>Transaction identifier, copied from the corresponding request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalcTime" type="xs:duration">
				<xs:annotation>
					<xs:documentation>Real time needed for calculating the contained results.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:group ref="StaticDataResponseGroup"/>
				<xs:group ref="UserTriggeredResponseGroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SubscriptionRequestType">
		<xs:annotation>
			<xs:documentation>Request messages in subscription scheme.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transaction" type="TransactionType">
				<xs:annotation>
					<xs:documentation>Transaction identifier, set by the requestor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:group ref="SubscriptionAdministrationRequestGroup"/>
				<xs:group ref="SubscriptionRequestGroup"/>
				<xs:group ref="RequestMessageGroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SubscriptionResponseType">
		<xs:annotation>
			<xs:documentation>Response messages in subscription scheme.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transaction" type="TransactionType">
				<xs:annotation>
					<xs:documentation>Transaction identifier, copied from the corresponding request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CalcTime" type="xs:duration">
				<xs:annotation>
					<xs:documentation>Real time needed for calculating the contained results.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:group ref="SubscriptionAdministrationResponseGroup"/>
				<xs:group ref="SubscriptionResponseGroup"/>
				<xs:group ref="ResponseMessageGroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SubscriptionMessageType">
		<xs:annotation>
			<xs:documentation>Delivery messages in subscription scheme.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:group ref="PushMessageGroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IxsiMessageType">
		<xs:annotation>
			<xs:documentation>Type for all IXSI messages.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Request" type="QueryRequestType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Independent requests in query scheme. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Response" type="QueryResponseType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Independent responses in query scheme.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubscriptionRequest" type="SubscriptionRequestType">
				<xs:annotation>
					<xs:documentation>Request in subscription scheme. Each request leads to at least one response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubscriptionResponse" type="SubscriptionResponseType">
				<xs:annotation>
					<xs:documentation>Response in subscription scheme. Each response corresponds to exactly one request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubscriptionMessage" type="SubscriptionMessageType">
				<xs:annotation>
					<xs:documentation>Push message in subscription scheme.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="Ixsi" type="IxsiMessageType">
		<xs:annotation>
			<xs:documentation>Root element for all IXSI messages. IXSI = Interface for X-Sharing Information.</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>
